{"version":3,"sources":["components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Tags.tsx","hooks/useAuth.ts","utils/getRpcUrl.ts","config/constants/nfts.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","config/constants/teams.ts","state/teams/helpers.ts","config/constants/campaigns.ts","hooks/useRefresh.ts","components/layout/Page.tsx","config/index.ts","utils/makeBatchRequest.ts","config/constants/ifo.ts","state/block/index.ts","state/achievements/helpers.ts","state/achievements/index.ts","contexts/RefreshContext.tsx","state/prices/index.ts","utils/web3React.ts","utils/wallet.ts","contexts/Localisation/translationsContext.ts","utils/achievements.ts","utils/addressHelpers.ts","components/UnlockButton.tsx","config/constants/index.ts","components/layout/Container.tsx","hooks/useApprove.ts","hooks/useHarvest.ts","components/PageLoader.tsx","hooks/useStake.ts","hooks/useUnstake.ts","config/constants/types.ts","components/layout/Flex.tsx","state/actions.ts","utils/contractHelpers.ts","hooks/useI18n.ts","hooks/useContract.ts","utils/callHelpers.ts","state/hooks.ts","utils/multicall.ts","config/constants/contracts.ts","hooks/useWeb3.ts","config/constants/pools.ts","utils/web3.ts","utils/formatBalance.ts","config/constants/farms.ts","hooks/useEagerConnect.ts","hooks/useGetDocumentTitlePrice.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Coming.tsx","components/Label/Label.tsx","components/Balance.tsx","components/TokenInput/TokenInput.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","utils/apy.ts","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx","views/Collectibles/hooks/useGetBullHiccupClaimableStatus.ts","routerHistory.ts","views/Collectibles/components/ClaimBullHiccupNftModal.tsx","views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","state/teams/index.tsx","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/toasts/index.ts"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","CoreTag","variant","outline","startIcon","CommunityTag","BinanceTag","DualTag","useAuth","useWeb3React","activate","deactivate","toastError","useToast","login","useCallback","connectorID","connector","connectorsByName","error","a","UnsupportedChainIdError","setupNetwork","name","message","logout","nodes","process","getNodeUrl","randomIndex","random","Nfts","description","images","lg","md","sm","ipfs","video","webm","mp4","sortOrder","bunnyId","blur","fetchFarms","Promise","all","farmsConfig","farmConfig","lpAdress","getAddress","lpAddresses","calls","address","tokenAddresses","params","quoteTokenAdresses","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","pid","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","teams","id","alt","background","textColor","users","points","profileContract","getProfileContract","getTeam","teamId","methods","getTeamProfile","call","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","push","makeBatchRequest","teamData","onChainTeamData","Number","campaigns","type","title","badge","campaignMap","Map","campaign","set","useRefresh","RefreshContext","fastRefresh","fast","slowRefresh","slow","Page","Container","mediaQueries","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","BSC_BLOCK_TIME","CAKE_POOL_PID","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","LOTTERY_TICKET_PRICE","batch","getWeb3NoAccount","BatchRequest","promises","resolve","reject","add","request","err","result","execute","ifos","isActive","subTitle","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","currency","currencyAddress","tokenSymbol","releaseBlockNumber","campaignId","blockSlice","blockNumber","setBlock","_","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","get","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","concat","setAchievements","clearAchievements","fetchAchievements","achievements","console","kebabCase","toastTypes","DANGER","createContext","RefreshContextProvider","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","fetchPrices","createAsyncThunk","fetch","response","json","update_at","prices","Object","keys","token","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","provider","window","ethereum","method","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","registerToken","tokenAddress","tokenImage","options","image","tokenAdded","defaultTranslationState","translations","setTranslations","TranslationsContext","fallback","getClaimableIfoData","ifoCampaigns","ifosList","filter","ifoItem","undefined","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","has","ifoCampaign","getCakeAddress","addresses","cake","masterChef","getMulticallAddress","mulltiCall","getWbnbAddress","wbnb","getLotteryAddress","lottery","getLotteryTicketAddress","lotteryNFT","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","UnlockButton","TranslateString","useI18n","onPresentConnectModal","useWalletModal","onClick","communityFarms","isCommunity","useApprove","lpContract","useDispatch","masterChefContract","useMasterchef","onApprove","approve","tx","useSousApprove","sousId","sousChefContract","useSousChef","updateUserAllowance","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","useHarvest","farmPid","onReward","harvest","txHash","useAllHarvest","farmPids","harvestPromises","useSousHarvest","isUsingBnb","handleHarvest","soushHarvestBnb","soushHarvest","updateUserPendingReward","updateUserBalance","Wrapper","PageLoader","useSousStake","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","onStake","useStake","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","unstake","sousEmegencyUnstake","sousUnstake","useUnstake","QuoteToken","PoolCategory","FlexLayout","getContract","abi","web3","web3NoAccount","eth","Contract","getBep20Contract","bep20Abi","getIfoContract","ifoAbi","getSouschefContract","poolsConfig","pool","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getMasterchefContract","getClaimRefundContract","claimRefundAbi","translationId","foundTranslation","translation","stringId","text","includesVariable","interpolatedText","isEmpty","dataKey","templateKey","RegExp","replace","useIfoContract","useWeb3","useMemo","useERC20","useBunnyFactory","usePancakeRabbits","useProfile","useLotteryTicket","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","ethers","constants","MaxUint256","send","from","deposit","gas","on","transactionHash","withdraw","emergencyWithdraw","ZERO","useFetchPublicData","fetchPoolsPublicDataAsync","getBlockNumber","useFarms","useSelector","useFarmFromPid","useFarmFromSymbol","lpSymbol","useFarmUser","usePools","fetchPoolsUserDataAsync","pools","usePriceBnbBusd","usePriceCakeBusd","usePriceEthBusd","toast","pushToast","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","remove","removeToast","clear","clearToast","useFetchProfile","fetchProfile","profile","isInitialized","hasRegistered","hasProfile","useTeam","fetchTeam","useTeams","fetchTeams","useFetchAchievements","useAchievements","useFetchPriceList","useGetApiPrice","useBlock","block","useTotalValue","bnbPrice","cakePrice","val","quoteTokenSymbol","BNB","CAKE","plus","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","97","56","syrup","busd","ust","library","refEth","useRef","Web3","setweb3","current","tokenName","stakingTokenName","stakingTokenAddress","CORE","projectLink","tokenPerBlock","isFinished","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","getBalanceNumber","balance","displayBalance","dividedBy","toNumber","getFullDisplayBalance","toFixed","contracts","useEagerConnect","connectorId","localStorage","getItem","connectorLocalStorageKey","useGetDocumentTitlePrice","cakePriceUsd","document","toLocaleString","minimumFractionDigits","maximumFractionDigits","GlobalStyle","createGlobalStyle","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","REACT_APP_CROWDIN_PROJECTID","stringTranslationsApi","StringTranslations","REACT_APP_CROWDIN_APIKEY","LanguageContextProvider","storedLangCode","storedLang","getStoredLang","listLanguageTranslations","fetchTranslationsForSelectedLanguage","then","translationApiResponse","catch","e","langObject","setItem","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeContext","label","icon","href","items","Menu","currentLang","langs","links","username","nft","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","history","nextState","replaceState","location","reload","this","Component","ToastListener","toasts","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","Card","card","CardTitle","Balance","Label","textSubtle","DetailPlaceholder","Value","Footer","Coming","style","padding","role","aria-label","src","width","height","as","external","mb","flex","StyledLabel","StyledText","Text","isDisabled","color","textDisabled","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","TokenInput","max","onChange","onSelectMax","justifyContent","minHeight","alignItems","placeholder","textTransform","mx","scale","DepositModal","onConfirm","onDismiss","stakingTokenDecimals","setVal","pendingTx","setPendingTx","fullBalance","handleChange","currentTarget","handleSelectMax","disabled","WithdrawModal","CompoundModal","BalanceRow","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","COMMUNITY","StyledFooter","StyledDetailsButton","primary","Details","Row","Flex","FlexFull","TokenLink","CardFooter","totalStaked","startBlock","endBlock","currentBlock","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","blocksUntilStart","Math","blocksRemaining","imageSrc","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","stakingLimit","isBnbPool","stakingTokenContract","apy","stakingTokenPrice","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isNaN","isFinite","getPoolApy","parseFloat","requestedApproval","setRequestedApproval","stakingTokenBalance","pendingReward","SYRUP","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","poolImage","toLocaleLowerCase","onPresentWithdraw","handleApprove","marginBottom","display","HarvestButton","eq","PoolTabButtons","stackedOnly","setStackedOnly","useRouteMatch","url","isExact","ToggleWrapper","checked","activeIndex","Hero","Farm","path","partition","finishedPools","openPools","stackedOnlyPools","Divider","exact","orderBy","bunnySpecialContract","useGetBullHiccupClaimableStatus","hasChecked","setHasChecked","claimables","setClaimables","canClaimMultiple","isBullClaimable","isHiccupClaimable","checkClaimableStatus","isSomeClaimable","values","some","status","createBrowserHistory","bullNft","nftList","hiccupNft","NftImage","img","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","x","y","renderNftPreview","ClaimBullHiccupNftModal","collectibleMessage","delay","flexDirection","GlobalCheckBullHiccupClaimStatus","hasDisplayedModal","onPresentGiftModal","pathname","useLocation","Home","lazy","Farms","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","App","warn","Global","component","iterations","configureStore","devTools","reducer","farmsReducer","toastsReducer","poolsReducer","pricesReducer","profileReducer","teamsReducer","achievementsReducer","blockReducer","Providers","store","ReactDOM","render","StrictMode","getElementById","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingRouge","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","blockLimits","totalStakings","liveData","blockLimit","totalStaking","stakingTokenBalances","transformProfileResponse","profileResponse","userId","nftAddress","tokenId","rabbitContract","getUsername","ok","getProfile","getUserProfile","getBunnyId","nfts","nftItem","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","addPoints","toastsSlice","toastIndex","splice","unshift"],"mappings":"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","file":"static/js/main.34fc7452.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst CoreTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />} {...props}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = (props) => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />} {...props}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = (props) => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />} {...props}>\n    Binance\n  </Tag>\n)\n\nconst DualTag = (props) => (\n  <Tag variant=\"textSubtle\" outline {...props}>\n    Dual\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag }\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { ConnectorNames } from '@pancakeswap-libs/uikit'\nimport { useToast } from 'state/hooks'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          toastError(error.name, error.message)\n        }\n      })\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { login, logout: deactivate }\n}\n\nexport default useAuth\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import { Nft } from './types'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    bunnyId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    bunnyId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 4,\n  },\n]\n\nexport default Nfts\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = getAddress(farmConfig.lpAddresses)\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: getAddress(farmConfig.tokenAddresses),\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: getAddress(farmConfig.quoteTokenAdresses),\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: getAddress(farmConfig.tokenAddresses),\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: getAddress(farmConfig.quoteTokenAdresses),\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(18))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n  \n  \n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingRouge',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\nexport const CAKE_POOL_PID = 1\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://exchange.pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\n","import { getWeb3NoAccount } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3NoAccount()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","import { Ifo } from './types'\n\nconst ifos: Ifo[] = [\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: true,\n    name: 'Belt (BELT)',\n    subTitle: 'AMM protocol incorporating multi-strategy yield optimization',\n    description:\n      'Belt.fi is a protocol that allows users to retain the stability of their asset positions and get maximum yields with minimal risk, including automated vault compounding and yield optimization strategies. BELT is the governance and incentivization token of Belt Finance. BELT will be distributed to all types of pools.',\n    launchDate: 'Mar. 10',\n    launchTime: '5PM SGT',\n    saleAmount: '150,000 BELT',\n    raiseAmount: '$3,000,000',\n    cakeToBurn: '$1,500,000',\n    projectSiteUrl: 'https://beta.belt.fi/',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    tokenSymbol: 'BELT',\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    subTitle: 'A smart yield farming dashboard on BSC',\n    description:\n      'Yieldwatch is a smart yield farming dashboard on Binance Smart Chain that lets you monitor your liquidity pools, yield farming and token staking performance with fast and casual UI. The $WATCH token is a membership token, which is required to access advanced PRO features.',\n    launchDate: 'Mar. 4',\n    launchTime: '5PM SGT',\n    saleAmount: '8,000,000 WATCH',\n    raiseAmount: '$800,000',\n    cakeToBurn: '$400,000',\n    projectSiteUrl: 'https://yieldwatch.net/',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    tokenSymbol: 'WATCH',\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    subTitle: 'A decentralized oracle network on BSC',\n    description:\n      'Berry Data is a transparent community-veriﬁed price oracle on BSC. Berry Data provides a trustless and decentralized alternative for off-chain data. As the governance token for Berry Data, BRY allows holders to pay for Berry Data feeds, vote on governance issues, validate data through staking, and build the Berry ecosystem.',\n    launchDate: 'Feb. 16',\n    launchTime: '5PM SGT',\n    saleAmount: '2,000,000 BRY',\n    raiseAmount: '$1,000,000',\n    cakeToBurn: '$500,000',\n    projectSiteUrl: 'https://berrydata.co/',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    tokenSymbol: 'BRY',\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    subTitle: 'A blockchain based mutual to share the risk of DeFi on Binance Smart Chain',\n    description:\n      'Soteria allows users to buy insurance cover to greatly diminish or reduce the financial risk of hacks. It replaces the idea of a traditional insurance company, because it is wholly owned by the members. The model encourages engagement as members receive economic incentives for participating in Risk Assessment, Claims Assessment and Governance.',\n    launchDate: 'Jan. 21',\n    launchTime: '4PM SGT',\n    saleAmount: '1,500,000 wSOTE',\n    raiseAmount: '$525,000',\n    cakeToBurn: '$262,500',\n    projectSiteUrl: 'https://soteria.finance/#/',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    tokenSymbol: 'wSOTE',\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    subTitle: 'Crypto-assets insurance trading platform',\n    description:\n      'Helmet is a peer-to-peer insurance protocol written with options trading logic, which allows anyone to create any insurance policy easily in the market. Helmet aims to enable DeFi users to be protected against the risk of price fluctuations by providing price-shield insurance for BSC assets. They provide suppliers with a range of insurance types to sell, giving a variety of hedging strategies to the market.',\n    launchDate: 'Jan. 13',\n    launchTime: '5PM SGT',\n    saleAmount: '10,000,000 Helmet',\n    raiseAmount: '$1,000,000',\n    cakeToBurn: '$500,000',\n    projectSiteUrl: 'https://www.helmet.insure/',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    tokenSymbol: 'Helmet',\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    subTitle: 'Cross-chain Automated Market Maker',\n    description:\n      'Tenet is a cross-chain Automated Market Maker (AMM) connector that provides a decentralized Liquidity Tap for various tokens. The Liquidity Tap is the powerhouse of the Liquidity Pool, employing a dynamic algorithm to give the Liquidity Provider fairer, more efficient, and richer incentives. Tenet aims to build a cross-chain and cross-platform toolkit protocol that allows the demand side to customize the parameters of the liquidity tap, allowing them to reach out to more liquidity participants effectively and with relative ease.',\n    launchDate: 'Jan. 5',\n    launchTime: '3PM SGT',\n    saleAmount: '1,000,000 TEN',\n    raiseAmount: '$1,000,000',\n    cakeToBurn: '$500,000',\n    projectSiteUrl: 'https://www.tenet.farm/',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    tokenSymbol: 'TEN',\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    subTitle: 'Next-gen elastic supply token',\n    description:\n      'Ditto is the first elastic supply token on the Binance Smart Chain. Its goal is to maintain a stable price of $1, where its supply will adapt to changes in demand. All supply changes will apply equally to every wallet holding Ditto, and holders should always have the same % of the total supply',\n    launchDate: 'Dec. 23',\n    launchTime: '3PM SGT',\n    saleAmount: '700,000 DITTO',\n    raiseAmount: '$630,000',\n    cakeToBurn: '$315,000',\n    projectSiteUrl: 'https://ditto.money/',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 9,\n    tokenSymbol: 'DITTO',\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    subTitle: 'Online games on BSC',\n    description:\n      'BLINk enables BNB holders to enjoy gaming experiences that WINk users on Tron have been enjoying for over two years.',\n    launchDate: 'Nov. 20',\n    launchTime: '9PM SGT',\n    saleAmount: '100,000,000 BLINK',\n    raiseAmount: '$1,000,000',\n    cakeToBurn: '$500,000',\n    projectSiteUrl: 'https://blink.wink.org',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 6,\n    tokenSymbol: 'blink',\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n  },\n]\n\nexport default ifos\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Block } from '../types'\n\nconst initialState: Block = { blockNumber: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (_, action) => ({ blockNumber: action.payload }),\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\nconst profileSubgraphApi = process.env.REACT_APP_SUBGRAPH_PROFILE\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const data = await request(\n      profileSubgraphApi,\n      gql`\n        {\n          user(id: \"${account.toLowerCase()}\") {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n    )\n    return data.user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { toastTypes } from '@pancakeswap-libs/uikit'\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { kebabCase } from 'lodash'\nimport { push } from 'state/toasts'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data.concat(action.payload)\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n    const title = 'Error fetching achievements'\n    dispatch(push({ id: kebabCase(title), type: toastTypes.DANGER, title }))\n  }\n}\n\nexport default achievementSlice.reducer\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.com/api/v1/price')\n  const data = (await response.json()) as PriceApiResponse\n\n  // Return normalized token names\n  return {\n    update_at: data.update_at,\n    prices: Object.keys(data.prices).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: data.prices[token],\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.update_at\n      state.data = action.payload.prices\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap-libs/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: ['https://bscscan.com/'],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `IFO Shopper: ${campaign.title}`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `Committed more than $5 worth of LP in the ${campaign.title} IFO`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligble to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","import addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(addresses.cake)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.mulltiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(addresses.wbnb)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport useAuth from 'hooks/useAuth'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId >= 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      {/* <Spinner /> */}\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId >= 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId >= 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { TranslatableText } from 'state/types'\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  tokenSymbol: string\n  releaseBlockNumber: number\n  campaignId?: string\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'Rouge',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'ETH' = 'ETH',\n  'COMP' = 'COMP',\n  'SUSHI' = 'SUSHI',\n  'TPT' = 'TPT',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  tokenName: string\n  tokenAddress: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  stakingTokenDecimals?: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  images: NftImages\n  sortOrder: number\n  bunnyId: number\n  video?: NftVideo\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport { clear, remove, push } from './toasts'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoAbi from 'config/abi/ifo.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\n\nconst getContract = (abi: any, address: string, web3?: Web3) => {\n  const _web3 = web3 ?? web3NoAccount\n  return new _web3.eth.Contract((abi as unknown) as AbiItem, address)\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getIfoContract = (address: string, web3?: Web3) => {\n  return getContract(ifoAbi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\n","import { useContext } from 'react'\nimport { isEmpty } from 'lodash'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\ninterface ContextData {\n  [key: string]: number | string\n}\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\n    if (translations.length === 0) {\n      return fallback\n    }\n\n    const foundTranslation = translations.find((translation) => {\n      return translation.data.stringId === translationId\n    })\n\n    if (foundTranslation) {\n      const { text } = foundTranslation.data\n      const includesVariable = text.includes('%')\n\n      if (includesVariable) {\n        let interpolatedText = text\n\n        // If dynamic tags are found but no data was passed return the fallback\n        if (isEmpty(data)) {\n          return fallback\n        }\n\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\n        })\n\n        return interpolatedText\n      }\n\n      return text\n    }\n\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoContract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals = 18, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { kebabCase } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { Toast, toastTypes } from '@pancakeswap-libs/uikit'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Team } from 'config/constants/types'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  push as pushToast,\n  remove as removeToast,\n  clear as clearToast,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, Block, ProfileState, TeamsState, AchievementState, PriceState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchPrices } from './prices'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 1 // CAKE-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  const ZERO1 = new BigNumber(0.00002)\n\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO1\n  return  ZERO1\n\n}\n\nexport const usePriceEthBusd = (): BigNumber => {\n  // const pid = 14 // ETH-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  return new BigNumber(2600)\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\n      },\n      toastInfo: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\n      },\n      toastSuccess: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\n      },\n      toastWarning: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (token: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[token.toLowerCase()]\n}\n\n// Block\nexport const useBlock = (): Block => {\n  return useSelector((state: State) => state.block)\n}\n\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms()\n  const bnbPrice = usePriceBnbBusd()\n  const cakePrice = usePriceCakeBusd()\n  let value = new BigNumber(0)\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = cakePrice.times(farm.lpTotalInQuoteToken)\n      } else {\n        val = farm.lpTotalInQuoteToken\n      }\n      value = value.plus(val)\n    }\n  }\n  return value\n}","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","export default {\n  cake: {\n    97: '0xEbC781670DA4D22Ff539a95b13C6A54c08517A19',\n    56: '0xEbC781670DA4D22Ff539a95b13C6A54c08517A19',\n  },\n  syrup: {\n    97: '0xA404D4DF859270Fe06F4079b6d216d9cE109Fd87',\n    56: '0xA404D4DF859270Fe06F4079b6d216d9cE109Fd87',\n  },\n  masterChef: {\n    97: '0xb8717207eF2A9c0cA2a8040f4a7108CeF3ca93E8',\n    56: '0xb8717207eF2A9c0cA2a8040f4a7108CeF3ca93E8',\n  },\n  sousChef: {\n    97: '0xb8717207eF2A9c0cA2a8040f4a7108CeF3ca93E8',\n    56: '0xb8717207eF2A9c0cA2a8040f4a7108CeF3ca93E8',\n  },\n  wbnb: {\n    97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '',\n  },\n  ust: {\n    56: '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    97: '',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  eth: {\n    56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    97: '',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    tokenName: 'ROUGE',\n    tokenAddress: '0xEbC781670DA4D22Ff539a95b13C6A54c08517A19',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xEbC781670DA4D22Ff539a95b13C6A54c08517A19',\n    contractAddress: {\n      97: '0xb8717207eF2A9c0cA2a8040f4a7108CeF3ca93E8',\n      56: '0xb8717207eF2A9c0cA2a8040f4a7108CeF3ca93E8',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://pancakeswap.finance/',\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 1,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  // {\n  //   sousId: 68,\n  //   tokenName: 'NULS',\n  //   tokenAddress: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.nuls.io/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.0868',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 8,\n  // },\n  // {\n  //   sousId: 67,\n  //   tokenName: 'BELT',\n  //   tokenAddress: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://beta.belt.fi/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.00868',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 66,\n  //   tokenName: 'RAMP',\n  //   tokenAddress: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://rampdefi.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.4861',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 65,\n  //   tokenName: 'BFI',\n  //   tokenAddress: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://bearn.fi/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.0001157',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 64,\n  //   tokenName: 'DEXE',\n  //   tokenAddress: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://dexe.network/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.009837',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 63,\n  //   tokenName: 'BEL',\n  //   tokenAddress: '0x8443f091997f06a61670b735ed92734f5628692f',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://bella.fi/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.0549',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 62,\n  //   tokenName: 'CAKE',\n  //   tokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   stakingTokenName: QuoteToken.TPT,\n  //   stakingTokenAddress: '0xeca41281c24451168a37211f0bc2b8645af45092',\n  //   stakingTokenDecimals: 4,\n  //   stakingLimit: 25000,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.tokenpocket.pro/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.0462',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 61,\n  //   tokenName: 'TPT',\n  //   tokenAddress: '0xeca41281c24451168a37211f0bc2b8645af45092',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.tokenpocket.pro/',\n  //   harvest: true,\n  //   tokenPerBlock: '3.616',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 4,\n  // },\n  // {\n  //   sousId: 60,\n  //   tokenName: 'WATCH',\n  //   tokenAddress: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://yieldwatch.net/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.3472',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 59,\n  //   tokenName: 'xMARK',\n  //   tokenAddress: '0x26a5dfab467d4f58fb266648cae769503cec9580',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://benchmarkprotocol.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.0413',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 9,\n  // },\n  // {\n  //   sousId: 58,\n  //   tokenName: 'bMXX',\n  //   tokenAddress: '0x4131b87f74415190425ccd873048c708f8005823',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://multiplier.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.00248',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 57,\n  //   tokenName: 'IOTX',\n  //   tokenAddress: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://iotex.io/',\n  //   harvest: true,\n  //   tokenPerBlock: '6.365',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 56,\n  //   tokenName: 'BOR',\n  //   tokenAddress: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.boringdao.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.000395',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 55,\n  //   tokenName: 'bOPEN',\n  //   tokenAddress: '0xf35262a9d427f96d2437379ef090db986eae5d42',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://opendao.io/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.0723',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 54,\n  //   tokenName: 'CAKE',\n  //   tokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   stakingTokenName: QuoteToken.SUSHI,\n  //   stakingTokenAddress: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\n  //   stakingLimit: 50,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.sushi.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.0367',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 53,\n  //   tokenName: 'DODO',\n  //   tokenAddress: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://dodoex.io/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.0578',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 52,\n  //   tokenName: 'SWINGBY',\n  //   tokenAddress: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://swingby.network/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.13',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 51,\n  //   tokenName: 'BRY',\n  //   tokenAddress: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://berrydata.co/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.1157',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 50,\n  //   tokenName: 'ZEE',\n  //   tokenAddress: '0x44754455564474a89358b2c2265883df993b12f0',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://zeroswap.io/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.1736',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 49,\n  //   tokenName: 'SWGb',\n  //   tokenAddress: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://swirgepay.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.899',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 48,\n  //   tokenName: 'CAKE',\n  //   tokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   stakingTokenName: QuoteToken.COMP,\n  //   stakingTokenAddress: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n  //   stakingLimit: 1,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://compound.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.055',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 47,\n  //   tokenName: 'CAKE',\n  //   tokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   stakingTokenName: QuoteToken.COMP,\n  //   stakingTokenAddress: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n  //   stakingLimit: 1,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://compound.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.55',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 46,\n  //   tokenName: 'SFP',\n  //   tokenAddress: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.safepal.io/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.6',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 45,\n  //   tokenName: 'LINA',\n  //   tokenAddress: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://linear.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.983',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 44,\n  //   tokenName: 'LINA',\n  //   tokenAddress: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://linear.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.0983',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 43,\n  //   tokenName: 'LIT',\n  //   tokenAddress: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.litentry.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.231',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 42,\n  //   tokenName: 'HGET',\n  //   tokenAddress: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.hedget.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.0138',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 6,\n  // },\n  // {\n  //   sousId: 41,\n  //   tokenName: 'BDO',\n  //   tokenAddress: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://bdollar.fi/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.075',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 40,\n  //   tokenName: 'EGLD',\n  //   tokenAddress: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://elrond.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.001215',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 39,\n  //   tokenName: 'UST',\n  //   tokenAddress: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://mirror.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.1157',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 38,\n  //   tokenName: 'wSOTE',\n  //   tokenAddress: '0x541e619858737031a1244a5d0cd47e5ef480342c',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://soteria.finance/#/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.23',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 37,\n  //   tokenName: 'FRONT',\n  //   tokenAddress: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://frontier.xyz/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.2546',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 36,\n  //   tokenName: 'Helmet',\n  //   tokenAddress: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.helmet.insure/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.81',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 35,\n  //   tokenName: 'BTCST',\n  //   tokenAddress: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.1-b.tc/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.011574',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 34,\n  //   tokenName: 'BSCX',\n  //   tokenAddress: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://bscex.org/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.17361',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 33,\n  //   tokenName: 'TEN',\n  //   tokenAddress: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.tenet.farm/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.05787',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 32,\n  //   tokenName: 'bALBT',\n  //   tokenAddress: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://allianceblock.io/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.4166',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 31,\n  //   tokenName: 'ASR',\n  //   tokenAddress: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.chiliz.com',\n  //   harvest: true,\n  //   tokenPerBlock: '0.01',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 2,\n  // },\n  // {\n  //   sousId: 30,\n  //   tokenName: 'ATM',\n  //   tokenAddress: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.chiliz.com',\n  //   harvest: true,\n  //   tokenPerBlock: '0.01',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 2,\n  // },\n  // {\n  //   sousId: 29,\n  //   tokenName: 'OG',\n  //   tokenAddress: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.chiliz.com',\n  //   harvest: true,\n  //   tokenPerBlock: '0.01',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 2,\n  // },\n  // {\n  //   sousId: 28,\n  //   tokenName: 'REEF',\n  //   tokenAddress: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://reef.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '115.74',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 27,\n  //   tokenName: 'DITTO',\n  //   tokenAddress: '0x233d91a0713155003fc4dce0afa871b508b3b715',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://ditto.money/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.01157',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 9,\n  // },\n  // {\n  //   sousId: 26,\n  //   tokenName: 'CAKE',\n  //   tokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   stakingTokenName: QuoteToken.TWT,\n  //   stakingTokenAddress: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n  //   stakingLimit: 1000,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.248',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 24,\n  //   tokenName: 'JUV',\n  //   tokenAddress: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.chiliz.com',\n  //   harvest: true,\n  //   tokenPerBlock: '0.02',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 2,\n  // },\n  // {\n  //   sousId: 25,\n  //   tokenName: 'PSG',\n  //   tokenAddress: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.chiliz.com',\n  //   harvest: true,\n  //   tokenPerBlock: '0.02',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 2,\n  // },\n  // {\n  //   sousId: 22,\n  //   tokenName: 'JUV',\n  //   tokenAddress: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x27Bd41E77cab966a57232915292410ACfD2761Ac',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.chiliz.com',\n  //   harvest: true,\n  //   tokenPerBlock: '0.02',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 2,\n  // },\n  // {\n  //   sousId: 23,\n  //   tokenName: 'PSG',\n  //   tokenAddress: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1DA236Ec18D80ADd7740baD2A74cdA2ADb9E17bE',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.chiliz.com',\n  //   harvest: true,\n  //   tokenPerBlock: '0.02',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 2,\n  // },\n  // {\n  //   sousId: 21,\n  //   tokenName: 'VAI',\n  //   tokenAddress: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://venus.io/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.104',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 20,\n  //   tokenName: 'CAKE',\n  //   tokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   stakingTokenName: QuoteToken.BNB,\n  //   stakingLimit: 10,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n  //   },\n  //   poolCategory: PoolCategory.BINANCE,\n  //   projectLink: 'https://pancakeswap.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 19,\n  //   tokenName: 'BNB',\n  //   tokenAddress: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://pancakeswap.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.0041',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 18,\n  //   tokenName: 'BLK',\n  //   tokenAddress: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://blink.wink.org',\n  //   harvest: true,\n  //   tokenPerBlock: '23.14',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 6,\n  // },\n  // {\n  //   sousId: 17,\n  //   tokenName: 'BLK',\n  //   tokenAddress: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://blink.wink.org',\n  //   harvest: true,\n  //   tokenPerBlock: '23.14',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 16,\n  //   tokenName: 'UNFI',\n  //   tokenAddress: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://unifiprotocol.com',\n  //   harvest: true,\n  //   tokenPerBlock: '0.02893',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 15,\n  //   tokenName: 'TWT',\n  //   tokenAddress: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '5',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 14,\n  //   tokenName: 'HARD',\n  //   tokenAddress: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://hard.kava.io',\n  //   harvest: true,\n  //   tokenPerBlock: '0.346',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 6,\n  // },\n  // {\n  //   sousId: 13,\n  //   tokenName: 'bROOBEE',\n  //   tokenAddress: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   projectLink: 'https://roobee.io/',\n  //   harvest: true,\n  //   tokenPerBlock: '12.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 12,\n  //   tokenName: 'STAX',\n  //   tokenAddress: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   projectLink: 'http://stablexswap.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.2',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 11,\n  //   tokenName: 'NAR',\n  //   tokenAddress: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   projectLink: 'https://narwhalswap.org/',\n  //   harvest: true,\n  //   tokenPerBlock: '1',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 10,\n  //   tokenName: 'NYA',\n  //   tokenAddress: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   projectLink: 'https://nyanswop.org/',\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '10',\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 9,\n  //   tokenName: 'CTK',\n  //   tokenAddress: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.certik.foundation/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 6,\n  // },\n  // {\n  //   sousId: 8,\n  //   tokenName: 'TWT',\n  //   tokenAddress: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 7,\n  //   tokenName: 'INJ',\n  //   tokenAddress: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://injectiveprotocol.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.25',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 6,\n  //   tokenName: 'CTK',\n  //   tokenAddress: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0xF35d63Df93f32e025bce4A1B98dcEC1fe07AD892',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.certik.foundation/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 5,\n  //   tokenName: 'CTK',\n  //   tokenAddress: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.certik.foundation/',\n  //   tokenPerBlock: '0.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 6,\n  // },\n  // {\n  //   sousId: 4,\n  //   tokenName: 'SXP',\n  //   tokenAddress: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0xD32B30b151a6aDB2e0Fa573a37510C097DaBD2F3',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://swipe.io/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 3,\n  //   tokenName: 'INJ',\n  //   tokenAddress: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0x92E8CeB7eAeD69fB6E4d9dA43F605D2610214E68',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://injectiveprotocol.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.25',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 2,\n  //   tokenName: 'ALPHA',\n  //   tokenAddress: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x73c83bd1646991cBca3e6b83ca905542FE07C57A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://alphafinance.io/',\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 1,\n  //   tokenName: 'TWT',\n  //   tokenAddress: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: -1,\n  //   tokenName: 'XVS',\n  //   tokenAddress: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  //   },\n  //   tokenPerBlock: '0',\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://venus.io/',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n]\n\nexport default pools\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport default web3NoAccount\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  // {\n  //   pid: 0,\n  //   lpSymbol: 'Rouge',\n  //   lpAddresses: {\n  //     97: '0xEbC781670DA4D22Ff539a95b13C6A54c08517A19',\n  //     56: '0xEbC781670DA4D22Ff539a95b13C6A54c08517A19',\n  //   },\n  //   tokenSymbol: 'XRGE',\n  //   tokenAddresses: {\n  //     97: '0xEbC781670DA4D22Ff539a95b13C6A54c08517A19',\n  //     56: '0xEbC781670DA4D22Ff539a95b13C6A54c08517A19',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  {\n    pid: 1,\n    lpSymbol: 'Rouge-BNB LP',\n    lpAddresses: {\n      97: '0x36833Ec614aC37D9bC067F866DAcab518f73F89C',\n      56: '0x36833Ec614aC37D9bC067F866DAcab518f73F89C',\n    },\n    tokenSymbol: 'XRGE',\n    tokenAddresses: {\n      97: '0xEbC781670DA4D22Ff539a95b13C6A54c08517A19',\n      56: '0xEbC781670DA4D22Ff539a95b13C6A54c08517A19',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '0xdc954DA77F6baE81c61429ecD2439903C572895d',\n      56: '0xdc954DA77F6baE81c61429ecD2439903C572895d',\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  // {\n  //   pid: 3,\n  //   lpSymbol: 'Rouge-BUSD LP',\n  //   lpAddresses: {\n  //     97: '0xF52be08D8a3ee7A7C1d8591D3E3f8D6A22019121',\n  //     56: '0xF52be08D8a3ee7A7C1d8591D3E3f8D6A22019121',\n  //   },\n  //   tokenSymbol: 'Rouge',\n  //   tokenAddresses: {\n  //     97: '0xb36b5716CC186Ae16696De2953ae56DfaFCC23c4',\n  //     56: '0xb36b5716CC186Ae16696De2953ae56DfaFCC23c4',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  \n]\n\nexport default farms\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap-libs/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\n    // into the Window object in time causing it to throw an error\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { useEffect } from 'react'\nimport { usePriceCakeBusd } from 'state/hooks'\n\nconst useGetDocumentTitlePrice = () => {\n  const cakePriceUsd = usePriceCakeBusd();\n\n\n  useEffect(() => {\n    document.title = `RougeSwap - $${Number(cakePriceUsd).toLocaleString(undefined, {\n      minimumFractionDigits: 3,\n      maximumFractionDigits: 3,\n    })}`\n  })\n}\nexport default useGetDocumentTitlePrice\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  // EN,\n  // AR,\n  // CA,\n  // ZHCN,\n  // ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations([])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          setTranslations([])\n          console.error('Error while loading translations', e)\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: 'https://www.rougecoin.xyz',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://rougeswap.com/#/swap',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://rougeswap.com/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  // {\n  //   label: 'Lottery',\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: 'Collectibles',\n  //   icon: 'NftIcon',\n  //   href: '/collectibles',\n  // },\n  // {\n  //   label: 'Teams & Profile',\n  //   icon: 'GroupsIcon',\n  //   calloutClass: 'rainbow',\n  //   items: [\n  //     {\n  //       label: 'Leaderboard',\n  //       href: '/teams',\n  //     },\n  //     {\n  //       label: 'Task Center',\n  //       href: '/profile/tasks',\n  //     },\n  //     {\n  //       label: 'Your Profile',\n  //       href: '/profile',\n  //     },\n  //   ],\n//  },\n    {\n      label: 'More',\n      icon: 'MoreIcon',\n      items: [\n        \n        {\n          label: 'Github',\n          href: 'https://github.com/SweetSwap',\n        },\n        {\n          label: 'Docs',\n          href: 'https://medium.com/@SweetSwap',\n        },\n        {\n          label: 'Blog',\n          href: 'https://app.gitbook.com/@sweetswapfinance/s/sweetswap/',\n        },\n      ],\n    \n  },\n  // {\n  //   label: 'IFO',\n  //   icon: 'IfoIcon',\n  //   href: '/ifo',\n  // },\n  // {\n  //   label: 'More',\n  //   icon: 'MoreIcon',\n  //   items: [\n  //     {\n  //       label: 'Voting',\n  //       href: 'https://voting.pancakeswap.finance',\n  //     },\n  //     {\n  //       label: 'Github',\n  //       href: 'https://github.com/pancakeswap',\n  //     },\n  //     {\n  //       label: 'Docs',\n  //       href: 'https://docs.pancakeswap.finance',\n  //     },\n  //     {\n  //       label: 'Blog',\n  //       href: 'https://pancakeswap.medium.com',\n  //     },\n  //   ],\n  // },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const valueud=0;\n  const { profile } = useProfile()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n     // setLang={setSelectedLanguage}\n      cakePriceUsd= {cakePriceUsd}\n      links={config}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/',\n        noProfileLink: '/',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ToastContainer, Toast } from '@pancakeswap-libs/uikit'\nimport { useToast } from 'state/hooks'\nimport { State } from 'state/types'\n\nconst ToastListener = () => {\n  const toasts: Toast[] = useSelector((state: State) => state.toasts.data)\n  const { remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap-libs/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default EasterEgg\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from '@pancakeswap-libs/uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card >\n      <div style={{ padding: '24px' }}>\n        <CardTitle>\n          {TranslateString(414, 'Your Project?')}{' '}\n          <span role=\"img\" aria-label=\"eyes\">\n            👀\n          </span>\n        </CardTitle>\n        <Image src=\"/mobile.svg\" width={64} height={64} alt=\"Your project here\" />\n        <Balance>???</Balance>\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n        <Button\n          variant=\"secondary\"\n          as=\"a\"\n          href=\"\"\n          external\n          width=\"100%\"\n          mb=\"16px\"\n        >\n          {TranslateString(418, 'Apply Now')}\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          <Value>??</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"syrup\">\n             {' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value>??? Rouge</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import React from 'react'\nimport { Box, Button, Flex, Text, Input, InputProps } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Box>\n      <Flex justifyContent=\"flex-end\" minHeight=\"21px\" mb=\"8px\">\n        <Text color=\"primary\" fontSize=\"14px\">\n          {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        <Flex alignItems=\"center\">\n          <Text bold color=\"primary\" textTransform=\"uppercase\" mx=\"8px\">\n            {symbol}\n          </Text>\n          <div>\n            <Button scale=\"sm\" onClick={onSelectMax}>\n              {TranslateString(452, 'Max')}\n            </Button>\n          </div>\n        </Flex>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, stakingTokenDecimals)\n  }, [max, stakingTokenDecimals])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\n  onConfirm,\n  onDismiss,\n  max,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, stakingTokenDecimals)\n  }, [max, stakingTokenDecimals])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({\n  earnings,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings, stakingTokenDecimals)\n  }, [earnings, stakingTokenDecimals])\n\n  return (\n    <Modal\n      title={`${TranslateString(704, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          width=\"100%\"\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Flex } from '@pancakeswap-libs/uikit'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { useBlock } from 'state/hooks'\nimport { PoolCategory } from 'config/constants/types'\nimport { registerToken } from 'utils/wallet'\nimport { BASE_URL } from 'config'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  decimals: number\n  totalStaked: BigNumber\n  tokenName: string\n  tokenAddress: string\n  tokenDecimals: number\n  startBlock: number\n  endBlock: number\n  isFinished: boolean\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled(Flex)`\n  align-items: center;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  decimals,\n  tokenAddress,\n  totalStaked,\n  tokenName,\n  tokenDecimals,\n  isFinished,\n  startBlock,\n  endBlock,\n  poolCategory,\n}) => {\n  const { blockNumber: currentBlock } = useBlock()\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenName.toLowerCase()}.png`\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row mb=\"4px\">\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked, decimals)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <Flex mb=\"4px\">\n            <TokenLink onClick={() => registerToken(tokenAddress, tokenName, tokenDecimals, imageSrc)}>\n              Add {tokenName} to Metamask\n            </TokenLink>\n            {/* <MetamaskIcon height={15} width={15} ml=\"4px\" /> */}\n          </Flex>\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getPoolApy } from 'utils/apy'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport { useGetApiPrice } from 'state/hooks'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface HarvestProps {\n  pool: Pool\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    tokenName,\n    tokenAddress,\n    stakingTokenName,\n    stakingTokenAddress,\n    stakingTokenDecimals,\n    projectLink,\n    harvest,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWeb3React()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  // // APY\n  // const rewardTokenPrice = useGetApiPrice(tokenName)\n  // const stakingTokenPrice = useGetApiPrice(stakingTokenName)\n  const rewardTokenPrice = 0.02\n  const stakingTokenPrice = 0.02\n  const apy = getPoolApy(\n    stakingTokenPrice,\n    rewardTokenPrice,\n    getBalanceNumber(pool.totalStaked, stakingTokenDecimals),\n    parseFloat(pool.tokenPerBlock),\n  )\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n      stakingTokenDecimals={stakingTokenDecimals}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n  const poolImage = `${pool.tokenName}-${pool.stakingTokenName}.svg`.toLocaleLowerCase()\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={onUnstake}\n      tokenName={stakingTokenName}\n      stakingTokenDecimals={stakingTokenDecimals}\n    />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/pools/${poolImage}`} alt={tokenName} width={64} height={64} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(704, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} width=\"100%\">\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0', stakingTokenDecimals)\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"white\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div>{TranslateString(384, 'Your Stake')}:</div>\n          <Balance\n            fontSize=\"14px\"\n            isDisabled={isFinished}\n            value={getBalanceNumber(stakedBalance, stakingTokenDecimals)}\n          />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        decimals={stakingTokenDecimals}\n        totalStaked={totalStaked}\n        startBlock={startBlock}\n        endBlock={endBlock}\n        isFinished={isFinished}\n        poolCategory={poolCategory}\n        tokenName={tokenName}\n        tokenAddress={tokenAddress}\n        tokenDecimals={tokenDecimals}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR } from 'config'\n\n/**\n * Get the APY value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APY is NaN or infinite.\n */\nexport const getPoolApy = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n) => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100).div(10000)\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\n}\n\nexport default null\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = ({ stackedOnly, setStackedOnly }) => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ToggleWrapper>\n        <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} />\n        <Text> {TranslateString(999, 'Staked only')}</Text>\n      </ToggleWrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(1198, 'Live')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(388, 'Finished')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 32px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React, { useState, useMemo } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport { usePools, useBlock } from 'state/hooks'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const pools = usePools(account)\n  const { blockNumber } = useBlock()\n  const [stackedOnly, setStackedOnly] = useState(false)\n\n  const [finishedPools, openPools] = useMemo(\n    () => partition(pools, (pool) => pool.isFinished || blockNumber > pool.endBlock),\n    [blockNumber, pools],\n  )\n  const stackedOnlyPools = useMemo(\n    () => openPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\n    [openPools],\n  )\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(738, 'Pudding Pool')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake Rouge to earn new tokens.')}</li>\n            <li>{TranslateString(486, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        {/* <img src=\"/images/syrup.png\" alt=\"Candy POOL icon\" width={410} height={191} /> */}\n      </Hero>\n      <PoolTabButtons stackedOnly={stackedOnly} setStackedOnly={setStackedOnly} />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {stackedOnly\n              ? orderBy(stackedOnlyPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)\n              : orderBy(openPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnySpecialContract } from 'utils/contractHelpers'\n\nexport const BULL_NFT = 11\nexport const HICCUP_NFT = 10\n\nconst bunnySpecialContract = getBunnySpecialContract()\n\nconst useGetBullHiccupClaimableStatus = () => {\n  const [hasChecked, setHasChecked] = useState(false)\n  const [claimables, setClaimables] = useState({\n    [BULL_NFT]: false,\n    [HICCUP_NFT]: false,\n  })\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const checkClaimableStatus = async () => {\n      const [isBullClaimable, isHiccupClaimable] = (await bunnySpecialContract.methods\n        .canClaimMultiple(account, [BULL_NFT, HICCUP_NFT])\n        .call()) as boolean[]\n\n      setClaimables({\n        [BULL_NFT]: isBullClaimable,\n        [HICCUP_NFT]: isHiccupClaimable,\n      })\n      setHasChecked(true)\n    }\n\n    if (account) {\n      checkClaimableStatus()\n    }\n  }, [account, setClaimables, setHasChecked])\n\n  return {\n    isSomeClaimable: Object.values(claimables).some((status) => status === true),\n    isBullClaimable: claimables[BULL_NFT],\n    isHiccupClaimable: claimables[HICCUP_NFT],\n    hasChecked,\n  }\n}\n\nexport default useGetBullHiccupClaimableStatus\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@pancakeswap-libs/uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport useI18n from 'hooks/useI18n'\nimport confetti from 'canvas-confetti'\nimport nftList from 'config/constants/nfts'\nimport { BULL_NFT, HICCUP_NFT } from '../hooks/useGetBullHiccupClaimableStatus'\n\ninterface ClaimBullHiccupNftModalProps extends InjectedModalProps {\n  isBullClaimable: boolean\n  isHiccupClaimable: boolean\n}\n\nconst bullNft = nftList.find((nft) => nft.bunnyId === BULL_NFT)\nconst hiccupNft = nftList.find((nft) => nft.bunnyId === HICCUP_NFT)\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  margin-bottom: 24px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\nconst renderNftPreview = (isBullClaimable: boolean, isHiccupClaimable: boolean) => {\n  if (isBullClaimable && isHiccupClaimable) {\n    return <img src=\"/images/bull-hiccup.png\" height=\"128px\" width=\"128px\" alt=\"nft\" style={{ marginBottom: '24px' }} />\n  }\n\n  if (isBullClaimable) {\n    return <NftImage src={`/images/nfts/${bullNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\n  }\n\n  return <NftImage src={`/images/nfts/${hiccupNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\n}\n\nconst ClaimBullHiccupNftModal: React.FC<ClaimBullHiccupNftModalProps> = ({\n  isBullClaimable,\n  isHiccupClaimable,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const collectibleMessage =\n    isBullClaimable && isHiccupClaimable\n      ? TranslateString(999, 'You won two Collectibles!')\n      : TranslateString(999, 'You won a collectible!')\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        {renderNftPreview(isBullClaimable, isHiccupClaimable)}\n        <Text bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {collectibleMessage}\n        </Text>\n        <Button onClick={handleClick}>{TranslateString(999, 'Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ClaimBullHiccupNftModal\n","import React, { useEffect, useRef } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { useModal } from '@pancakeswap-libs/uikit'\nimport useGetBullHiccupClaimableStatus from '../hooks/useGetBullHiccupClaimableStatus'\nimport ClaimBullHiccupNftModal from './ClaimBullHiccupNftModal'\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckBullHiccupClaimStatus = () => {\n  const hasDisplayedModal = useRef(false)\n  const { isSomeClaimable, isBullClaimable, isHiccupClaimable } = useGetBullHiccupClaimableStatus()\n  const [onPresentGiftModal] = useModal(\n    <ClaimBullHiccupNftModal isBullClaimable={isBullClaimable} isHiccupClaimable={isHiccupClaimable} />,\n  )\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    if (!pathname.includes('/collectibles') && isSomeClaimable && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckBullHiccupClaimStatus\n","import React, { useEffect, lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { useFetchPriceList, useFetchProfile, useFetchPublicData } from 'state/hooks'\nimport useGetDocumentTitlePrice from './hooks/useGetDocumentTitlePrice'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport GlobalCheckBullHiccupClaimStatus from './views/Collectibles/components/GlobalCheckBullHiccupClaimStatus'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  // Monkey patch warn() because of web3 flood\n  // To be removed when web3 1.3.5 is released\n  useEffect(() => {\n    console.warn = () => null\n  }, [])\n\n  useEagerConnect()\n  useFetchPublicData()\n  useFetchProfile()\n  useFetchPriceList()\n  useGetDocumentTitlePrice()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <GlobalCheckBullHiccupClaimStatus />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport toastsReducer from './toasts'\nimport poolsReducer from './pools'\nimport pricesReducer from './prices'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    toasts: toastsReducer,\n    pools: poolsReducer,\n    prices: pricesReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    achievements: achievementsReducer,\n    block: blockReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ThemeContextProvider>\n          <LanguageContextProvider>\n            <RefreshContextProvider>\n              <ModalProvider>{children}</ModalProvider>\n            </RefreshContextProvider>\n          </LanguageContextProvider>\n        </ThemeContextProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3NoAccount()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingRouge('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract, getPancakeRabbitContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport nfts from 'config/constants/nfts'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst rabbitContract = getPancakeRabbitContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      const bunnyId = await rabbitContract.methods.getBunnyId(tokenId).call()\n      nft = nfts.find((nftItem) => nftItem.bunnyId === Number(bunnyId))\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, addPoints } = profileSlice.actions\n\n// Thunks\nexport const fetchProfile = (address: string) => async (dispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { Toast } from '@pancakeswap-libs/uikit'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ToastsState } from '../types'\n\nconst initialState: ToastsState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state: ToastsState) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n"],"sourceRoot":""}